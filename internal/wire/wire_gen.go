// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wire

import (
	"github.com/agpprastyo/career-link/pkg/server"
)

// Injectors from wire.go:

// InitializeAPI sets up the complete API server with all dependencies
func InitializeAPI() (*server.Server, error) {
	appConfig := provideAppConfig()
	logger := provideLogger(appConfig)
	app := provideRouter(appConfig, logger)
	postgresDB := provideDBConnection(appConfig)
	client := provideMailClient(appConfig, logger)
	minioClient := provideMinioClient(appConfig, logger)
	string2 := provideVerifyBaseURL(appConfig)
	userRepository := provideUserRepository(postgresDB, logger, client, minioClient, string2)
	maker := provideTokenMaker(appConfig)
	userUseCase := provideUserUseCase(userRepository, logger, maker)
	redisClient, err := provideRedisClient(appConfig)
	if err != nil {
		return nil, err
	}
	handler := provideUserHandler(userUseCase, logger, appConfig, maker, redisClient, userRepository)
	healthHandler := provideHealthHandler(postgresDB, redisClient)
	serverServer := server.NewServer(app, appConfig, logger, handler, healthHandler)
	return serverServer, nil
}
